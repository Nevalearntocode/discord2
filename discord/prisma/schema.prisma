// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?

  accounts Account[]
}

model Profile {
  id            String    @id @default(cuid())
  userId        String    @unique
  name          String
  imageUrl      String    @db.Text
  email         String

  servers       Server[]
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Server {
  id            String    @id @default(cuid())
  name          String
  // url           String
  // public        Boolean   @default(false)
  imageUrl      String    @db.Text
  inviteCode    String    @db.Text

  profileId     String
  profile       Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)

  roles         Role[]

  @@index([profileId])

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Permission {
  FULLACCESS
  ACCESS
  READONLY
  BLOCKED
}

model Role {
  name        String
  permission  Permission @default(ACCESS)

  serverId    String
  server      Server     @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@unique([name, serverId])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}